name: Deploy to Azure Web App (dev)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

env:
  APP_NAME: angelgoddsantana-me

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: true

      - name: Pull Git LFS assets
        run: |
          git lfs install
          git lfs pull

      - name: Build Vite app
        run: pnpm build

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Create deployment package
        run: |
          zip -r deploy.zip . -x "*.git*" "node_modules/*" "**/.vite/**"

      - name: Parse publish profile
        id: parsepp
        env:
          PUBLISH_PROFILE: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        shell: bash
        run: |
          set -euo pipefail
          XML="$PUBLISH_PROFILE"
          # Extract attributes from the ZipDeploy profile line
          ZIP_LINE=$(printf "%s" "$XML" | tr '\n' ' ' | sed -n 's/.*<publishProfile[^>]*publishMethod="ZipDeploy"[^>]*>.*/\0/p')
          if [ -z "$ZIP_LINE" ]; then
            ZIP_LINE=$(printf "%s" "$XML" | tr '\n' ' ' | sed -n 's/.*<publishProfile[^>]*publishMethod="MSDeploy"[^>]*>.*/\0/p')
          fi
          if [ -z "$ZIP_LINE" ]; then
            echo "No publishProfile found" >&2; exit 1
          fi
          KUDU_URL=$(printf "%s" "$ZIP_LINE" | sed -n 's/.*publishUrl="\([^"]*\)".*/\1/p')
          KUDU_USER=$(printf "%s" "$ZIP_LINE" | sed -n 's/.*userName="\([^"]*\)".*/\1/p')
          KUDU_PWD=$(printf "%s" "$ZIP_LINE" | sed -n 's/.*userPWD="\([^"]*\)".*/\1/p')
          if [ -z "$KUDU_URL" ] || [ -z "$KUDU_USER" ] || [ -z "$KUDU_PWD" ]; then
            echo "Failed to parse publish profile" >&2; exit 1
          fi
          case "$KUDU_URL" in http* ) : ;; * ) KUDU_URL="https://$KUDU_URL" ;; esac
          echo "KUDU_URL=$KUDU_URL" >> "$GITHUB_OUTPUT"
          echo "KUDU_USER=$KUDU_USER" >> "$GITHUB_OUTPUT"
          echo "KUDU_PWD=$KUDU_PWD" >> "$GITHUB_OUTPUT"

      - name: Deploy via Kudu Zip Deploy
        shell: bash
        run: |
          set -euo pipefail
          echo "::add-mask::${{ steps.parsepp.outputs.KUDU_USER }}"
          echo "::add-mask::${{ steps.parsepp.outputs.KUDU_PWD }}"
          KUDU_API="${{ steps.parsepp.outputs.KUDU_URL }}"/api/zipdeploy
          curl -sS -u "${{ steps.parsepp.outputs.KUDU_USER }}:${{ steps.parsepp.outputs.KUDU_PWD }}" \
            -X POST "$KUDU_API" --data-binary @deploy.zip
